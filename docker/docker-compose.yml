version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
#      PGADMIN_DEFAULT_PASSWORD: admin
#    ports:
#      - "5050:80"
#    networks:
#      - postgres


#  zookeeper:
#    image: wurstmeister/zookeeper
#    container_name: zoo
#    ports:
#      - 2181:2181
#
#  kafka:
#    image: wurstmeister/kafka
#    container_name: kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_CRETE_TOPICS: "topic1:1"
#      KAFKA_BROKER_ID: 1
#      KAFKA_LISTENERS: PLAINTEXT_HOST://:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_HOST://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_HOST
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#      KAFKA_ZOOKEEPER_CONNECT: zoo:2181
#    command: [start-kafka.sh]
#    depends_on:
#      - zookeeper
#

networks:
  postgres:
    driver: bridge